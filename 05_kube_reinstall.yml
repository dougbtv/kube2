---
- hosts: all
  become: true
  become_user: root
  tasks:
    - name: delete all cni files
      shell: >
        rm /etc/cni/net.d/*
    - name: delete all completed flags
      shell: >
        rmdir /etc/.kubeadm-*
    - name: kubeadm reset
      shell:
        kubeadm reset -f
    - name: reboot vm
      reboot:
        reboot_timeout: 600

- hosts: all
  tasks:
    - name: wait for startup
      wait_for_connection:
        delay: 20
        timeout: 120

- hosts: master, master_slave, nodes
  become: true
  become_user: root
  tasks:
    - name: load required kernel modules(bridge)
      command: modprobe bridge # noqa no-changed-when
    - name: load required kernel modules(br_netfilter)
      command: modprobe br_netfilter # noqa no-changed-when


- hosts: master
  become: true
  become_user: root
  tasks: []
  roles:
    - { role: kube_init }
    - { role: kubectl_configure }

- hosts: master_slave
  become: true
  become_user: root
  pre_tasks:
    - name: Get cert related args from master
      set_fact:
        kubeadm_cert_key: "{{ hostvars[groups['master'][0]]['kubeadm_cert_key'] }}"
    - name: Get kubeadm_join_command from master
      set_fact:
        kubeadm_join_command: "{{ hostvars[groups['master'][0]]['kubeadm_join_command'] }}"
  tasks: []
  roles:
    - { role: kube_master_join_cluster }
    - { role: kubectl_configure }

# without become.
- hosts: master, master_slave
  tasks: []
  roles:
    - { role: kube_niceties }

- hosts: nodes
  become: true
  become_user: root
  pre_tasks:
    - name: Get kubeadm_join_command from master
      set_fact:
        kubeadm_join_command: "{{ hostvars[groups['master'][0]]['kubeadm_join_command'] }}"
  tasks: []
  roles:
    - { role: kube_join_cluster }

- hosts: master
  become: true
  become_user: root
  tasks: []
  roles:
    - { role: kubectl_proxy_systemd, when: kubectl_proxy_port is undefined}

- hosts: master
  become: true
  become_user: root
  tasks:
    - name: copy kube config
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/kubeconfig"
        flat: yes
    - name: show message
      debug:
        msg: export KUBECONFIG={{ playbook_dir }}/kubeconfig loads cluster config!
