---
- name: copy modules
  copy:
    src: "{{ role_path }}/files/modules"
    dest: "{{ playbook_dir }}/tf"
    mode: 0755
  tags: vm_create

- name: generate main.tf
  template:
    src: main.tf.j2
    dest: "{{ playbook_dir }}/tf/main.tf"
    mode: 0644
  tags: vm_create

- name: setup vm
  terraform:
    project_path: "{{ playbook_dir }}/tf"
    binary_path: "{{ playbook_dir }}/tf/terraform"
    state: present
    force_init: true
  tags: vm_create

- name: get vm ips
  shell: "set -o pipefail; ./terraform output -json | jq 'map_values(.value[0])'"
  args:
    chdir: "{{ playbook_dir }}/tf"
  changed_when: False
  register: host_ips_out

- name: convert ips output to ansible fact
  set_fact:
    host_ips: "{{ host_ips_out.stdout | from_json }}"

- name: Build a local inventory
  template:
    src: vms.local.j2
    dest: "{{ playbook_dir }}/vms.local.generated"
    mode: 0644

- name: create ssh conf directory
  file:
    path: "{{ ansible_env.HOME }}/.ssh/conf.d"
    state: directory
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_env.USER }}"
    mode: '0700'

- name: create ssh config file
  template:
    src: kube_hosts.j2
    dest: "{{ ansible_env.HOME }}/.ssh/conf.d/kube_hosts"
    mode: '0600'
